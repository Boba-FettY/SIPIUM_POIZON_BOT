import logging
from telegram.ext import Application, MessageHandler, filters, \
    CommandHandler, CallbackQueryHandler, ContextTypes
from config import BOT_TOKEN
from telegram import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, Update

start_reply_keyboard = [['üí∞–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'], ['üîé–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è']]
admin_reply_keyboard = [['üí∞–†–∞—Å—Å—á–∏—Ç–∞—Ç—å'], ['üîé–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è'], ['üõ†–ö—É—Ä—Å']]
start_markup = ReplyKeyboardMarkup(start_reply_keyboard, one_time_keyboard=False)
admin_markup = ReplyKeyboardMarkup(admin_reply_keyboard, one_time_keyboard=False)
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.DEBUG
)
admin_list = [1320663119, 565778929]
logger = logging.getLogger(__name__)


async def search(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:

    if update.message.text == 'üí∞–†–∞—Å—Å—á–∏—Ç–∞—Ç—å':
        with open('money.txt') as dengi:
            kr = dengi.read()
        await update.message.reply_text(f'–î–µ–π—Å—Ç–≤—É–π—â–∏–π –∫—É—Ä—Å: {kr}\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Ç–æ–≤–∞—Ä–∞:')

    elif update.message.text == 'üõ†–ö—É—Ä—Å' and update.message.from_user.id in admin_list:
        await update.message.reply_text(f'–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç—ã\n'
                                        f'–≤ —Ñ–æ—Ä–º–∞—Ç–µ "–∫(–∑–Ω–∞—á–µ–Ω–∏–µ)":')

    elif update.message.text == 'üîé–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        await update.message.reply_text(f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üîç\n\n'
                                        f'–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ç–æ—á–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å'
                                        f' –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –≤—ã–∫—É–ø–∞ –∂–µ–ª–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —Å –ø–ª–æ—â–∞–¥–∫–∏ POIZON\n\n'
                                        f'–î–ª—è —Ä–∞—Å—á—ë—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –¢–µ—Ö–Ω–∏–∫–∏ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ª–∏—á–Ω—ã–µ'
                                        f' —Å–æ–æ–±—â–µ–Ω–∏—è\n\n@sipium\n@r_out_t')

    else:
        if update.message.text.isdigit():
            keyboard = [
                [
                    InlineKeyboardButton("üëü–ö—Ä–æ—Å—Å–æ–≤–∫–∏", callback_data=f"–∫—Ä{float(update.message.text)}"),
                    InlineKeyboardButton("üëï–û–¥–µ–∂–¥–∞", callback_data=f"–æ–¥{float(update.message.text)}"),
                ],
                [InlineKeyboardButton("üï∂–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã", callback_data=f"–∞–∫{float(update.message.text)}")],
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(f'–ö–∞–∫–æ–π —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=reply_markup)
        elif update.message.from_user.id in admin_list and update.message.text[0] == '–∫':
            try:
                q = float(update.message.text[1:])
                with open('money.txt', 'w') as mn:
                    mn.truncate(0)
                with open('money.txt', 'w') as mn:
                    mn.write(update.message.text[1:])
                await update.message.reply_text('–ö—É—Ä—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω!')
            except Exception:
                pass


async def start(update, context):
    id_user = update.message.from_user.id
    if id_user in admin_list:
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç!)\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ä–∞—Å—á—ë—Ç–æ–º –∑–∞–∫–∞–∑–∞ —Å POIZON\n\n"
            "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–π –≤–µ—â–∏ —Å POIZON"
            " –æ—Ç –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–º–æ–π –ø–ª–æ—â–∞–¥–∫–µ, –¥–æ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–µ–±–µ –≤ —Ä—É–∫–∏\n\n"
            "–ï—Å–ª–∏ —É —Ç–µ–±—è –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ —è –Ω–µ —Å–º–æ–≥—É —Ä–µ—à–∏—Ç—å, –æ–±—Ä–∞—Ç–∏—Å—å"
            " –∫ –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –æ–Ω–∏ –æ—Ç–≤–µ—Ç—è—Ç –Ω–∞ –ª—é–±–æ–π —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å —Å 10:00"
            " –¥–æ 22:00 –ø–æ –ú–°–ö:\n\n"
            "@sipium - –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–µ—â–µ–π\n"
            "@r_out_t - –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
            reply_markup=admin_markup
        )
    else:
        await update.message.reply_text(
            "–ü—Ä–∏–≤–µ—Ç!\n\n)"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —Ä–∞—Å—á—ë—Ç–æ–º –∑–∞–∫–∞–∑–∞ —Å POIZON\n\n"
            "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–π –≤–µ—â–∏ —Å POIZON"
            " –æ—Ç –ø–æ–∫—É–ø–∫–∏ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∞–º–æ–π –ø–ª–æ—â–∞–¥–∫–µ, –¥–æ –ø–µ—Ä–µ–¥–∞—á–∏ —Ç–µ–±–µ –≤ —Ä—É–∫–∏\n\n"
            "–ï—Å–ª–∏ —É —Ç–µ–±—è –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã –∫–æ—Ç–æ—Ä—ã–µ —è –Ω–µ —Å–º–æ–≥—É —Ä–µ—à–∏—Ç—å, –æ–±—Ä–∞—Ç–∏—Å—å"
            " –∫ –Ω–∞—à–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º, –æ–Ω–∏ –æ—Ç–≤–µ—Ç—è—Ç –Ω–∞ –ª—é–±–æ–π —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å —Å 10:00"
            " –¥–æ 22:00 –ø–æ –ú–°–ö:\n\n"
            "@sipium - –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–∞–∫–∞–∑–∞ –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤–µ—â–µ–π"
            "@r_out_t - –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞",
            reply_markup=start_markup
        )


async def button(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Parses the CallbackQuery and updates the message text."""
    query = update.callback_query
    # CallbackQueries need to be answered, even if no notification to the user is needed
    # Some clients may have trouble otherwise. See https://core.telegram.org/bots/api#callbackquery
    await query.answer()
    await query.edit_message_text(text="***–í—ã–ø–æ–ª–Ω–µ–Ω–æ***")
    last_mn = float(query.data[2:])
    omsk = query.data[:2]
    qq = {'–∫—Ä': 1950, '–æ–¥': 1400, '–∞–∫': 900}
    k = 0
    with open('money.txt') as dengi:
        k = dengi.read()
        print(k)
    k = float(k)
    k *= last_mn
    k += qq[omsk]
    k *= 1.04
    k += 950
    obr = {'–∫—Ä': 'üëü–ö—Ä–æ—Å—Å–æ–≤–∫–∏', '–æ–¥': 'üëï–û–¥–µ–∂–¥–∞', '–∞–∫': 'üï∂–ê–∫—Å–µ—Å—Å—É–∞—Ä—ã'}
    await query.message.reply_text(f"–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∑–∞ –≤–∞—à —Ç–æ–≤–∞—Ä \n'{obr[omsk]}'  -  {k} ‚ÇΩ")
    global money
    money = False


def main():
    application = Application.builder().token(BOT_TOKEN).build()
    text_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, search)
    application.add_handler(text_handler)
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button))
    application.run_polling()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.
    application.run_polling()


if __name__ == '__main__':
    main()
